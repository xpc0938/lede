# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-work-CI

on:
  push:
    branches:
      - work
  schedule:
    - cron: '0 19 * * *'

permissions:
  contents: read
  #contents: write
  #pull-requests: write
  #packages: read
  #issues: write

env:
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  REPO_BRANCH: master
  #git push
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #gh
  GH_TOKEN: ${{ github.token }}

jobs:
  prebuild_test:
    name: Prebuild Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # full history so checkpatch can check commit IDs in commit messages
      - name: Update Git config
        run: |
          git config pull.rebase true
          git config --global user.email "xpc0938@126.com"
          git config --global user.name "pc.xue"
          git remote add openwrt ${REPO_URL}
          git remote -v
          CURBRANCH=`git branch | grep "\*" | awk '{print $2}'`
          git fetch openwrt ${REPO_BRANCH}
          git checkout --track openwrt/${REPO_BRANCH}
          git status
          git checkout $CURBRANCH
          git status
          #rebase and merge
          echo "Rebase and merge the latest ${REPO_BRANCH} branch (${REPO_URL}) to current ${CURBRANCH} branch ..."
          ## rebase need same history: git rebase -r openwrt/${REPO_BRANCH}
          #allow unrelated histories when merge
          git merge --allow-unrelated-histories --no-edit ${REPO_BRANCH}
          git status
          git log -3
      - name: Test
        run: |
          echo PWD: $PWD
          ls $PWD/
          DATE=$(date +'%Y%m%d%H%M%S')
          ##need permissions: contents: write
          #gh release create --generate-notes --latest ${DATE} feeds.conf.default

  build_openwrt:
    name: Build OpenWrt Firmware
    runs-on: ubuntu-latest
    steps:
      - name: 主机系统信息
        run: |
          echo "System information"
          head -v -n 2 /proc/version
          head -v -n 8 /proc/meminfo
          echo "==> free -h <=="
          free -h
          echo "==> df -h <=="
          df -h
          head -v -n-0 /proc/cpuinfo

      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* moby* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v3

      - name: 同步coolsnowwolf最新的源码
        run: |
          git config pull.rebase true
          git config --global user.email "xpc0938@126.com"
          git config --global user.name "pc.xue"
          git remote add openwrt ${REPO_URL}
          git remote -v
          CURBRANCH=`git branch | grep "\*" | awk '{print $2}'`
          git fetch openwrt ${REPO_BRANCH}
          git checkout --track openwrt/${REPO_BRANCH}
          git status
          git checkout $CURBRANCH
          git status
          #rebase and merge
          echo "Rebase and merge the latest ${REPO_BRANCH} branch (${REPO_URL}) to current ${CURBRANCH} branch ..."
          ## rebase need same history: git rebase -r openwrt/${REPO_BRANCH}
          #allow unrelated histories when merge
          git merge --allow-unrelated-histories --no-edit ${REPO_BRANCH}
          git status
          git log -3

      - name: 配置到最新Kernel版本和新增额外的package包
        run: |
          cat >> ./feeds.conf.default <<EOF
          #by xpc
          #filebrowser kodexplorer
          src-git lienol https://github.com/Lienol/openwrt-package
          EOF
          sed -i 's/^[ \t]*//g' ./feeds.conf.default
          sed -i 's/^#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          head -v -n-0 feeds.conf.default

          # switch to latest kernel
          current_linux_version=$(cat target/linux/x86/Makefile | grep "^KERNEL_PATCHVER:=" | awk -F"=" '{print $2}')
          # found lastest kernel version
          target_linux_version=$(ls target/linux/x86/config-* | awk -F"-" '{print $NF}' |sort -V |tail -1)   
          [ -n "$target_linux_version" ] || {
            echo "Found target_linux_version failure! Please check the result of command: \"ls target/linux/x86/config-* | awk -F"-" '{print $NF}' |sort -V |tail -1\""
            return 1
          }
          echo "Switch current kernel verison:${current_linux_version} to ${target_linux_version} ..."
          sed -i "/^KERNEL_PATCHVER:=*/s/.*/KERNEL_PATCHVER:=${target_linux_version}/g" target/linux/x86/Makefile
          sed -i "/^KERNEL_TESTING_PATCHVER:=*/s/.*/KERNEL_TESTING_PATCHVER:=${current_linux_version}/g" target/linux/x86/Makefile

          cd package
          [ -d lean ] || mkdir lean
          cd lean
          git clone https://github.com/openwrt-develop/luci-theme-atmaterial.git
          git clone https://github.com/Leo-Jo-My/luci-theme-opentomcat.git
          # my-settings
          git clone https://github.com/xpc0938/default-xpc-settings.git

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          DATE=$(date +'%Y%m%d%H%M%S')
          rm -f ./.config*
          touch ./.config
          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_BUSYBOX_CUSTOM=y
          CONFIG_ARIA2_BITTORRENT=y
          CONFIG_ARIA2_NOXML=y
          CONFIG_ARIA2_OPENSSL=y
          CONFIG_ARIA2_WEBSOCKET=y
          CONFIG_BUSYBOX_CONFIG_BUNZIP2=y
          CONFIG_BUSYBOX_CONFIG_BUSYBOX=y
          CONFIG_BUSYBOX_CONFIG_BZCAT=y
          CONFIG_BUSYBOX_CONFIG_DIFF=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_BZIP2_DECOMPRESS=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_DIFF_DIR=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_DIFF_LONG_OPTIONS=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_EDITING_HISTORY=2048
          CONFIG_BUSYBOX_CONFIG_FEATURE_EDITING_SAVEHISTORY=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_MKSWAP_UUID=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_MOUNT_FAKE=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_MOUNT_LABEL=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_MOUNT_VERBOSE=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_PS_LONG=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_REVERSE_SEARCH=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_TAR_AUTODETECT=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_TAR_LONG_OPTIONS=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_TAR_NOPRESERVE_TIME=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_TAR_TO_COMMAND=y
          CONFIG_BUSYBOX_CONFIG_FEATURE_TAR_UNAME_GNAME=y
          CONFIG_BUSYBOX_CONFIG_MKFS_VFAT=y
          CONFIG_BUSYBOX_CONFIG_MORE=y
          CONFIG_BUSYBOX_CONFIG_MOUNTPOINT=y
          CONFIG_BUSYBOX_CONFIG_PSTREE=y
          CONFIG_BUSYBOX_CONFIG_VOLUMEID=y
          CONFIG_BUSYBOX_CONFIG_XZCAT=y
          # CONFIG_JSON_OVERVIEW_IMAGE_INFO is not set
          # CONFIG_LIBCURL_NGHTTP2 is not set
          CONFIG_LUA_ECO_OPENSSL=y
          # CONFIG_LUA_ECO_WOLFSSL is not set
          CONFIG_NFS_KERNEL_SERVER_V4=y
          CONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1
          CONFIG_PACKAGE_TAR_BZIP2=y
          CONFIG_PACKAGE_TAR_GZIP=y
          CONFIG_PACKAGE_TAR_XZ=y
          CONFIG_PACKAGE_TAR_ZSTD=y
          CONFIG_PACKAGE_alsa-lib=y
          CONFIG_PACKAGE_alsa-ucm-conf=y
          CONFIG_PACKAGE_alsa-utils=y
          # CONFIG_PACKAGE_amdgpu-firmware is not set
          CONFIG_PACKAGE_aria2=y
          CONFIG_PACKAGE_ariang=y
          # CONFIG_PACKAGE_attr is not set
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_bzip2=y
          CONFIG_PACKAGE_default-xpc-settings=y
          # CONFIG_PACKAGE_dnsmasq_full_dhcpv6 is not set
          CONFIG_PACKAGE_exfat-fsck=y
          CONFIG_PACKAGE_exfat-mkfs=y
          CONFIG_PACKAGE_fdisk=y
          CONFIG_PACKAGE_file=y
          CONFIG_PACKAGE_gdisk=y
          CONFIG_PACKAGE_glib2=y
          CONFIG_PACKAGE_gowebdav=y
          CONFIG_PACKAGE_hd-idle=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_jq=y
          CONFIG_PACKAGE_kmod-ac97=y
          CONFIG_PACKAGE_kmod-asn1-encoder=y
          CONFIG_PACKAGE_kmod-crypto-cts=y
          CONFIG_PACKAGE_kmod-crypto-rng=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-dax=y
          CONFIG_PACKAGE_kmod-dm=y
          CONFIG_PACKAGE_kmod-dnsresolver=y
          # CONFIG_PACKAGE_kmod-drm-amdgpu is not set
          CONFIG_PACKAGE_kmod-fs-exportfs=y
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-common-rpcsec=y
          CONFIG_PACKAGE_kmod-fs-nfs-ssc=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-nfsd=y
          CONFIG_PACKAGE_kmod-i915-gvt=y
          CONFIG_PACKAGE_kmod-irqbypass=y
          CONFIG_PACKAGE_kmod-keys-encrypted=y
          CONFIG_PACKAGE_kmod-keys-trusted=y
          CONFIG_PACKAGE_kmod-kvm-intel=y
          CONFIG_PACKAGE_kmod-kvm-x86=y
          CONFIG_PACKAGE_kmod-ledtrig-audio=y
          CONFIG_PACKAGE_kmod-oid-registry=y
          CONFIG_PACKAGE_kmod-random-core=y
          CONFIG_PACKAGE_kmod-regmap-core=y
          CONFIG_PACKAGE_kmod-sound-core=y
          CONFIG_PACKAGE_kmod-sound-hda-codec-hdmi=y
          CONFIG_PACKAGE_kmod-sound-hda-codec-realtek=y
          CONFIG_PACKAGE_kmod-sound-hda-codec-via=y
          CONFIG_PACKAGE_kmod-sound-hda-core=y
          CONFIG_PACKAGE_kmod-sound-hda-intel=y
          CONFIG_PACKAGE_kmod-sound-i8x0=y
          CONFIG_PACKAGE_kmod-sound-mpu401=y
          CONFIG_PACKAGE_kmod-sound-via82xx=y
          # CONFIG_PACKAGE_kmod-tg3 is not set
          CONFIG_PACKAGE_kmod-tpm=y
          CONFIG_PACKAGE_kmod-usb-audio=y
          CONFIG_PACKAGE_kmod-vfio-mdev=y
          CONFIG_PACKAGE_libaio=y
          CONFIG_PACKAGE_libbz2=y
          CONFIG_PACKAGE_libconfig=y
          CONFIG_PACKAGE_libdevmapper=y
          CONFIG_PACKAGE_libdnet=y
          CONFIG_PACKAGE_libevent2=y
          CONFIG_PACKAGE_libffi=y
          # CONFIG_PACKAGE_libgnutls is not set
          CONFIG_PACKAGE_libkeyutils=y
          CONFIG_PACKAGE_liblzma=y
          CONFIG_PACKAGE_libmagic=y
          CONFIG_PACKAGE_libmspack=y
          # CONFIG_PACKAGE_libnettle is not set
          # CONFIG_PACKAGE_libnghttp2 is not set
          CONFIG_PACKAGE_libpcap=y
          CONFIG_PACKAGE_libpcre2=y
          CONFIG_PACKAGE_libsoxr=y
          # CONFIG_PACKAGE_libtasn1 is not set
          # CONFIG_PACKAGE_liburing is not set
          CONFIG_PACKAGE_libwrap=y
          CONFIG_PACKAGE_libzstd=y
          CONFIG_PACKAGE_losetup=y
          CONFIG_PACKAGE_lsof=y
          CONFIG_PACKAGE_luci-app-airplay2=y
          CONFIG_PACKAGE_luci-app-aria2=y
          CONFIG_PACKAGE_luci-app-design-config=y
          CONFIG_PACKAGE_luci-app-filebrowser=y
          CONFIG_PACKAGE_luci-app-hd-idle=y
          CONFIG_PACKAGE_luci-app-nfs=y
          CONFIG_PACKAGE_luci-app-samba=y
          # CONFIG_PACKAGE_luci-app-samba4 is not set
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_IPT2Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_NaiveProxy=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-transmission=y
          CONFIG_PACKAGE_luci-app-v2ray-server=y
          CONFIG_PACKAGE_luci-app-verysync=y
          CONFIG_PACKAGE_luci-app-webdav=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-airplay2-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-aria2-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-design-config-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-filebrowser-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-hd-idle-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-nfs-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-samba-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-transmission-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-v2ray-server-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-verysync-zh-cn=y
          CONFIG_PACKAGE_luci-theme-design=y
          CONFIG_PACKAGE_luci-theme-opentomcat=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_naiveproxy=y
          CONFIG_PACKAGE_ncat=y
          CONFIG_PACKAGE_nfs-kernel-server=y
          CONFIG_PACKAGE_nfs-kernel-server-utils=y
          CONFIG_PACKAGE_nfs-utils=y
          CONFIG_PACKAGE_nfs-utils-libs=y
          CONFIG_PACKAGE_ntfs3-mount=y
          CONFIG_PACKAGE_open-vm-tools=y
          # CONFIG_PACKAGE_procd-ujail is not set
          CONFIG_PACKAGE_procps-ng=y
          CONFIG_PACKAGE_procps-ng-free=y
          CONFIG_PACKAGE_procps-ng-kill=y
          CONFIG_PACKAGE_procps-ng-ps=y
          CONFIG_PACKAGE_procps-ng-uptime=y
          CONFIG_PACKAGE_progress=y
          CONFIG_PACKAGE_rpcbind=y
          CONFIG_PACKAGE_rsync=y
          CONFIG_PACKAGE_samba36-server=y
          # CONFIG_PACKAGE_samba4-libs is not set
          # CONFIG_PACKAGE_samba4-server is not set
          CONFIG_PACKAGE_sed=y
          CONFIG_PACKAGE_sgdisk=y
          CONFIG_PACKAGE_shairport-sync-openssl=y
          CONFIG_PACKAGE_strace=y
          CONFIG_PACKAGE_tar=y
          CONFIG_PACKAGE_tcpdump=y
          CONFIG_PACKAGE_transmission-daemon-openssl=y
          CONFIG_PACKAGE_transmission-web-control=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_unzip=y
          # CONFIG_PACKAGE_urngd is not set
          CONFIG_PACKAGE_usbids=y
          CONFIG_PACKAGE_uuidgen=y
          CONFIG_PACKAGE_verysync=y
          # CONFIG_PACKAGE_wsdd2 is not set
          CONFIG_PACKAGE_xz=y
          CONFIG_PACKAGE_xz-utils=y
          CONFIG_PCRE2_JIT_ENABLED=y
          CONFIG_RPCBIND_LIBWRAP=y
          CONFIG_RPCBIND_RMTCALLS=y
          CONFIG_TARGET_ROOTFS_PARTSIZE=500
          CONFIG_ZSTD_OPTIMIZE_O3=y
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          EOF

          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-atmaterial=y
          CONFIG_PACKAGE_luci-theme-design=y
          CONFIG_PACKAGE_luci-theme-opentomcat=y
          EOF
          #
          # ===============================================================
          #
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          cp .config config-${DATE}
          ./scripts/diffconfig.sh > diffconfig-${DATE}
          echo "======================= .config ==========================="
          cat .config
          echo "==================== .config end =========================="
      - name: Download packages
        run: make download -j16

      - name: Compile target bin firmware
        run: |
          echo -e "Compile targer: $(nproc) thread"
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
          configfile=$(ls config-* diffconfig-*)
          [ -n "${configfile}" ] && cp -rf ${configfile} ./artifact/buildinfo/
          [ -f sha256sums ] && cp -rf sha256sums ./artifact/buildinfo/
          # generate sha256sum for openwrt-squashfs-combined-efi
          for file in $(ls bin/targets/*/*/openwrt-*-*-generic-squashfs-combined-efi.img.gz); do sha256sum $file > $file.sha256sum; done

      - name: Upload buildinfo/configure
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo_configiure
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload all firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_all_firmware
          path: |
            ./bin/targets/
            ./config-*
            ./diffconfig-*

      - name: Upload firmware openwrt-squashfs-combined-efi
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware_openwrt-squashfs-combined-efi
          path: |
            ./bin/targets/*/*/openwrt-*-*-generic-squashfs-combined-efi.img.gz*
            ./config-*
            ./diffconfig-*
